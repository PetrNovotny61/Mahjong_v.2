<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ABERABERABERABERABERABERABERABERABERABERAH//2Q==
</value>
  </data>
</root>